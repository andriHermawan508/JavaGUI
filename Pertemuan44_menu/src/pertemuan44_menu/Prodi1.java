/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pertemuan44_menu;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;


/**
 *
 * @author LENOVO
 */
public class Prodi1 extends javax.swing.JFrame {

    /**
     * Creates new form Prodi
     */
    public Prodi1() {
        initComponents();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowOpened (java.awt.event.WindowEvent evt) {
        tampilDataKeTabel();
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        KODE_PRODI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        NAMA_PRODI = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        PASWORD = new javax.swing.JPasswordField();
        TOMBOL_SIMPAN = new javax.swing.JButton();
        PESAN = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABEL = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        JUMLAH_DOSEN = new javax.swing.JTextField();
        BACK = new javax.swing.JButton();
        UBAH = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));
        setForeground(new java.awt.Color(204, 0, 0));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("TAMBAH DATA PRODI");

        jLabel2.setText("Kode Prodi");

        KODE_PRODI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KODE_PRODIKeyPressed(evt);
            }
        });

        jLabel3.setText("Nama Prodi");

        jLabel4.setText("Pasword");

        TOMBOL_SIMPAN.setBackground(new java.awt.Color(102, 51, 255));
        TOMBOL_SIMPAN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TOMBOL_SIMPAN.setText("Simpan");
        TOMBOL_SIMPAN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TOMBOL_SIMPANMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TOMBOL_SIMPANMouseExited(evt);
            }
        });
        TOMBOL_SIMPAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TOMBOL_SIMPANActionPerformed(evt);
            }
        });
        TOMBOL_SIMPAN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TOMBOL_SIMPANKeyPressed(evt);
            }
        });

        PESAN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        PESAN.setForeground(new java.awt.Color(204, 204, 0));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("TABEL PRODI");

        TABEL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KODE PRODI", "NAMA PRODI", "PASWORD", "JUMLAH DOSEN"
            }
        ));
        jScrollPane1.setViewportView(TABEL);

        jLabel6.setText("Jumlah Dosen");

        BACK.setBackground(new java.awt.Color(51, 51, 255));
        BACK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BACK.setText("Back");
        BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKActionPerformed(evt);
            }
        });

        UBAH.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UBAH.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        UBAH.setLabel("Ubah");
        UBAH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UBAHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UBAH, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PESAN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(NAMA_PRODI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(KODE_PRODI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TOMBOL_SIMPAN, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PASWORD, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                            .addComponent(JUMLAH_DOSEN))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(KODE_PRODI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(NAMA_PRODI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(PASWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(JUMLAH_DOSEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TOMBOL_SIMPAN)
                            .addComponent(BACK))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PESAN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(UBAH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TOMBOL_SIMPANMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TOMBOL_SIMPANMouseEntered
        // TODO add your handling code here:
        PESAN.setText("Klik Untuk Menyimpan");
    }//GEN-LAST:event_TOMBOL_SIMPANMouseEntered

    private void TOMBOL_SIMPANMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TOMBOL_SIMPANMouseExited
        // TODO add your handling code here:
        PESAN.setText("");
    }//GEN-LAST:event_TOMBOL_SIMPANMouseExited

    private void TOMBOL_SIMPANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TOMBOL_SIMPANActionPerformed
       try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Prodi1.class.getName()).log(Level.SEVERE, null, ex);
        }
            Connection c=null;
            
        try {
            c=DriverManager.getConnection("jdbc:mysql://localhost:3306/unpam", "root", "");
            System.out.println("Koneksi berhasil");
        } catch (SQLException ex) {
            Logger.getLogger(Prodi1.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement st = null;
        try {
            st = c.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Prodi1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
 
        
        String kodeprodi = KODE_PRODI.getText();
        String namaprodi = NAMA_PRODI.getText();
        char [] password = PASWORD.getPassword();
        String pass = new String(password);
        String jumlahdosen = JUMLAH_DOSEN.getText();
        
        String query = "INSERT INTO prodi VALUES ('" + kodeprodi + "','" + namaprodi + "','" + pass +"','" + jumlahdosen + "')";
        
        
        if (kodeprodi.isEmpty()){
        JOptionPane.showMessageDialog(null, "Kode prodi Tidak Boleh Kosong!");
        
        }else if (namaprodi.isEmpty()){
            JOptionPane.showMessageDialog(null, "Nama Prodi Tidak Boleh Kosong!");
        }else if (password.length ==0){
            JOptionPane.showMessageDialog(null, "Password Tidak Boleh Kosong");
        } else if (jumlahdosen.isEmpty()){
            JOptionPane.showMessageDialog(null, "Jumlah Dosen Tidak Boleh Kosong!");
        }
        
        else{
            int jmlDosen= 0;
        
        
        
        
        try{
                jmlDosen= Integer.parseInt(JUMLAH_DOSEN.getText());
                 DefaultTableModel tabel = (DefaultTableModel) TABEL.getModel();
        tabel.addRow(new Object[]
        {
            KODE_PRODI.getText(),
            NAMA_PRODI.getText(),
            PASWORD.getPassword(), 
            jmlDosen
        }
        );
                
                }catch(NumberFormatException e){
                 JOptionPane.showMessageDialog(null,"Input Harus angka");      
              }try {
                //Execute Query
                st.execute(query);
                //membersihkan Field setelah disubmit
                KODE_PRODI.setText("");
                NAMA_PRODI.setText("");
                PASWORD.setText("");
                JUMLAH_DOSEN.setText("");
                
                //memberikan input data sudah masuk ke dalam database
                JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
                
            } catch (SQLException ex) {
                
                Logger.getLogger(Prodi1.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_TOMBOL_SIMPANActionPerformed

    private void BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BACKActionPerformed

    private void TOMBOL_SIMPANKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TOMBOL_SIMPANKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TOMBOL_SIMPANKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formKeyPressed

    private void KODE_PRODIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KODE_PRODIKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String kodeprodi = KODE_PRODI.getText().trim();
            if (kodeprodi.isEmpty()){
                JOptionPane.showMessageDialog(null, "Silahkan masukkan kode prodi");
                return;
            }
            
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/unpam", "root", "");
                Statement st = c.createStatement();
                String query = "SELECT * FROM prodi WHERE kode_prodi = '" + kodeprodi + "'";
                ResultSet rs = st.executeQuery(query);
                
                if (rs.next()) {
                    NAMA_PRODI.setText(rs.getString("nama_prodi"));
                    PASWORD.setText(rs.getString("password"));
                    JUMLAH_DOSEN.setText(String.valueOf(rs.getInt("jumlah_dosen")));
                    JOptionPane.showMessageDialog(null, "Data Ditemukan :");
                    
                }else {
                    JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan :");
                    
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Terjadi Kesalahan Saat Mengambil Data");
            }
        }
    }//GEN-LAST:event_KODE_PRODIKeyPressed

    private void UBAHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UBAHActionPerformed
        // TODO add your handling code here:
     String kodeProdi = KODE_PRODI.getText();
     String namaProdi = NAMA_PRODI.getText();
     char[] passwordArray = PASWORD.getPassword();
     String pass = new String(passwordArray);
     String dosenText = JUMLAH_DOSEN.getText();
     
     //Validasi input
     if (kodeProdi.isEmpty()){
         JOptionPane.showMessageDialog(null, "Kode Prodi tidak boleh kosong!");
         return;
     }else if (namaProdi.isEmpty()){
         JOptionPane.showMessageDialog(null, "Nama Prodi tidak boleh kosong!");
         return;
     }else if (passwordArray.length ==0) {
         JOptionPane.showMessageDialog(null, "Password tidak boleh kosong!");
         return;
     }
     int jmlDosen;
     try {
         jmlDosen = Integer.parseInt(dosenText);
     }catch (NumberFormatException e) {
         JOptionPane.showMessageDialog(null, "Jumlah Dosen harus berupa angka!");
         return;
     }
     try {
         //joneksi ke database
         Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/unpam", "root", "");
         Statement st = c.createStatement();
         //Cek apakah data dengan kode prodi ada
         String cekQuery = "SELECT * FROM prodi WHERE kode_prodi = '" + kodeProdi + "'";
         ResultSet rs = st.executeQuery(cekQuery);
         if (rs.next())  {
             String updateQuery = "UPDATE prodi SET nama_prodi = '" + namaProdi + "', password = '" + pass + "', jumlah_dosen ='" +jmlDosen + "' WHERE kode_prodi = '" + kodeProdi + "'";
             int result = st.executeUpdate(updateQuery);
             
             if (result > 0) {
                 JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
                 
                 //clear field setelah update 
                 KODE_PRODI.setText("");
                 NAMA_PRODI.setText("");
                 PASWORD.setText("");
                 JUMLAH_DOSEN.setText("");
                 
             }else {
                 JOptionPane.showMessageDialog(null, "Gagal mengubah data.");
             }
         }else {
             JOptionPane.showMessageDialog(null, "Data dengan kode prodi tersebut tidak ditemukan.");
         }
         
         //Refresh tabel
         DefaultTableModel model = (DefaultTableModel) TABEL.getModel();
         model.setRowCount(0); //Hapus semua baris lama 
         ResultSet rsRefresh = st.executeQuery("SELECT * FROM prodi");
         while (rsRefresh.next()) {
             String kode = rsRefresh.getString("kode_prodi");
             String nama = rsRefresh.getString("nama_prodi");
             String password = rsRefresh.getString("password");
             int jumlah = rsRefresh.getInt("jumlah_dosen");
             
             model.addRow(new Object[]{kode, nama, password, jumlah});
         }
     } catch (SQLException ex) {
         JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
     }
    }//GEN-LAST:event_UBAHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prodi1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prodi1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prodi1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prodi1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prodi1().setVisible(true);
            }
        });
    }
    
    // membuat fungsi 
    private void tampilDataKeTabel(){
        
    try {
        //Menyiapkan koneksi ke database
        Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/unpam", "root", "");
        
        //Membuat Satatement
        Statement st = c.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM prodi");
        
        //Mengambil data dari Jtabel
        DefaultTableModel model = (DefaultTableModel) TABEL.getModel();
        model.setRowCount(0);
        
        //Membaca atau tambahkan data dari database ke JTabel
        while (rs.next()) {
            String kode = rs.getString("kode_prodi");
            String nama = rs.getString("nama_prodi");
            String pass = rs.getString("password");
            int jumlah = rs.getInt("jumlah_dosen");
            
            model.addRow(new Object []{kode,nama, pass, jumlah});
            
            
        }
        
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "gagal menampilkan data");
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BACK;
    private javax.swing.JTextField JUMLAH_DOSEN;
    private javax.swing.JTextField KODE_PRODI;
    private javax.swing.JTextField NAMA_PRODI;
    private javax.swing.JPasswordField PASWORD;
    private javax.swing.JLabel PESAN;
    private javax.swing.JTable TABEL;
    private javax.swing.JButton TOMBOL_SIMPAN;
    private java.awt.Button UBAH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
